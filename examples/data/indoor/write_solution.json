{
  "task_type": "magpy",
  "cmd": "cfd.io.tasks.write_solution",
  "solution": {
    "cpus": [
      2,
      2,
      1
    ],
    "solver": "buoyantSimpleFoam",
    "case_type": "SimpleCase",
   "boundary_conditions": {
      "MaxY": {
        "preset": "wall"
      },
      "MinY": {
        "preset": "wall"
      },
      "MaxZ": {
        "preset": "wall",
        "overrides": "wallSlip"
      },
      "MinZ": {
        "preset": "wall",
        "overrides": "wallSlip"
      },
      "MinX": {
        "preset": "wall",
        "overrides": "wallSlip"
      },
      "MaxX": {
        "preset": "wall",
        "overrides": "wallSlip"
      },
      "openings.__0": {
        "preset": "fixedVelocity",
        "overrides": {
          "U": "{ value uniform (0 -0.1 0); }"
        }
      },
      "openings.__1": {
        "preset": "fixedVelocity",
        "overrides": {
          "U": "{ value uniform (0 0.1 0); }"
        }
      },
      "openings.__2": {
        "preset": "fixedVelocity",
        "overrides": {
          "U": "{ value uniform (0 0 0.04); }"
        }
      },
      "openings.__3": {
        "preset": "fixedVelocity",
        "overrides": {
          "U": "{ value uniform (0 0 0.04); }"
        }
      },
      "openings.__4": {
        "preset": "fixedVelocity",
        "overrides": {
          "U": "{ value uniform (0 0 0.04); }"
        }
      },
      "openings.__5": {
        "preset": "fixedPressureOutOnly"
      },
      "facade.__0": {
        "preset": "wall"
      },
      "facade.__1": {
        "preset": "wall"
      },
      "envolope": {
        "preset": "wall"
      },
      "slab.__0": {
        "preset": "wall"
      },
      "slab.__1": {
        "preset": "wall"
      },
      "railing.__0": {
        "preset": "wall"
      },
      "railing.__1": {
        "preset": "wall"
      },
      "people.__0": {
        "preset": "wall",
        "overrides": {
          "T": "{ type fixedValue; value uniform 313.15; }"
        }
      },
      "people.__1": {
        "preset": "wall",
        "overrides": {
          "T": "{ type fixedValue; value uniform 313.15; }"
        }
      },
      "people.__2": {
        "preset": "wall",
        "overrides": {
          "T": "{ type fixedValue; value uniform 313.15; }"
        }
      },
      "people.__3": {
        "preset": "wall",
        "overrides": {
          "T": "{ type fixedValue; value uniform 313.15; }"
        }
      },
      "people.__4": {
        "preset": "wall",
        "overrides": {
          "T": "{ type fixedValue; value uniform 313.15; }"
        }
      },
      "people.__5": {
        "preset": "wall",
        "overrides": {
          "T": "{ type fixedValue; value uniform 313.15; }"
        }
      },
      "people.__6": {
        "preset": "wall",
        "overrides": {
          "T": "{ type fixedValue; value uniform 313.15; }"
        }
      },
      "people.__7": {
        "preset": "wall",
        "overrides": {
          "T": "{ type fixedValue; value uniform 313.15; }"
        }
      },
      "people.__8": {
        "preset": "wall",
        "overrides": {
          "T": "{ type fixedValue; value uniform 313.15; }"
        }
      },
      "people.__9": {
        "preset": "wall",
        "overrides": {
          "T": "{ type fixedValue; value uniform 313.15; }"
        }
      },
      "people._10": {
        "preset": "wall",
        "overrides": {
          "T": "{ type fixedValue; value uniform 313.15; }"
        }
      },
      "people._11": {
        "preset": "wall",
        "overrides": {
          "T": "{ type fixedValue; value uniform 313.15; }"
        }
      },
      "people._12": {
        "preset": "wall",
        "overrides": {
          "T": "{ type fixedValue; value uniform 313.15; }"
        }
      }
    },
    "iterations": {
      "init": 50
    },
    "overrides": {
      "fields": [
        "/* \r\nThis is a OpenFOAM formatted dictionary that defines overrides that will be\r\napplied to the \"fields\" definition of your case.  \r\n\r\nThe fields dictionary defines which fields will be used (the files in the 0 folder).\r\nApplying overrides here allows you to define additional fields for the calculation.\r\n\r\nA field will look like this:\r\n```\r\nU\r\n{\r\n  classType volVectorField;\r\n  dimensions [ 0 1 -1 0 0 0 0 ];\r\n  internalField uniform (0 0 0);\r\n}\r\n```\r\n*/\r\n\r\nT\r\n{\r\n  internalField uniform 309;\r\n}",
        "fvSolution {\r\n  relaxationFactors {    \r\n    U 0.01;\r\n    k 0.01;\r\n    h 0.01;\r\n    epsilon 0.01;\r\n    p 0.3;\r\n  }\r\n}"
      ],
      "caseFiles": [
        "/* These overrides will override settings within casefiles.  \r\n\r\nThe case file that you specify will be created if it does not exist. \r\n\r\nNote that we use a \">\" to define path separators (not a slash \"/\")\r\nthis is because the backend data structure does not support slashes in\r\na dictionary key.\r\n\r\nA case file override looks like this:\r\n```\r\nconstant>porosityProperties {\r\n    testKey value;\r\n}\r\n```\r\n*/\r\n\r\ndecomposeParDict {\r\nnumberOfSubdomains 6;\r\nsimpleCoeffs { n (3 2 1); }\r\nhierarchicalCoeffs { n (3 2 1); }\r\n}\r\n\r\nsystem>fvOptions {\r\n//************************\r\n\r\nheatZone.__0\r\n{\r\n  type scalarSemiImplicitSource;\r\n  active true;\r\n  selectionMode cellSet;\r\n\r\n  scalarSemiImplicitSourceCoeffs\r\n  {\r\n    cellSet heatZone.__0;    \r\n    selectionMode cellSet;\r\n    volumeMode  specific; // absolute\r\n    injectionRateSuSp\r\n    {\r\n      h (61.337 0);\r\n    }\r\n  }\r\n}\r\n\r\n\r\nheatZone.__1\r\n{\r\n  type scalarSemiImplicitSource;\r\n  active true;\r\n  selectionMode cellSet;\r\n\r\n  scalarSemiImplicitSourceCoeffs\r\n  {\r\n    cellSet heatZone.__1;     \r\n    selectionMode cellSet;\r\n    volumeMode  specific; // absolute\r\n    injectionRateSuSp\r\n    {\r\n      h (95.58 0);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n//************************\r\n}\r\n"
      ],
      "setup": null,
      "presets": []
    },
    "files": []
  },
  "case_dir": "foam"
}